buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "1.1.0"
group = "leppa.planarartifice"
archivesBaseName = "planarartifice"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'Curseforge Maven'
        url = 'http://minecraft.curseforge.com/api/maven/'
    }
    maven {
        url = "https://www.cursemaven.com"
    }
    maven {
        name = 'jared maven'
        url = 'https://maven.blamejared.com/'
    }
    maven {
        name = 'Progwml6 maven'
        url = 'http://dvs1.progwml6.com/files/maven'
    }
    maven {
        name = "DragonForge"
        url = "https://raw.github.com/dragon-forge/maven/master"
    }
    maven {
        name = "why does this build require Redstone Flux"
        url = "https://maven.covers1624.net"
    }
    maven {
        name = "thiakil"
        url = "http://maven.thiakil.com"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
    compileOnly fg.deobf('mezz.jei:jei_1.12.2:4.16.1.302:api')
    runtimeOnly fg.deobf('mezz.jei:jei_1.12.2:4.16.1.302')
//    compile 'CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.19.548'
//    compile "com.blamejared:MTLib:3.0.4.8"
    compile "com.azanor.baubles:Baubles:1.12-1.5.2"
    compile fg.deobf("curse.maven:thaumcraft-223628:2629023")
    compile 'slimeknights.mantle:Mantle:1.12-1.3.3.49'
    compile 'slimeknights:TConstruct:1.12.2-2.13.0.184'
//    compile 'constructs-armory:conarm:1.12.2:1.2.5.4'
    compile 'curse.maven:bewitchment-285439:3256343'
    runtimeOnly 'curse.maven:patchouli-306770:3087124'
//    compile fg.deobf("curse.maven:thaumicbases:3056921")
//    compile "curse.maven:dummycore:2611426"
    compile "tk.zeitheron.HammerLib:HammerLib-1.12.2:2.0.6.19:deobf"
    compile "tk.zeitheron.ThaumicAdditions:ThaumicAdditions-1.12.2:12.4.3:deobf"
    compile "curse.maven:soot-281528:3056967"
    runtimeOnly "curse.maven:embers-rekindled-300777:3225431"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "planarartifice",
            "Specification-Vendor": "planarartificesareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"planarartificesareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
